import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("kotlin-kapt")
    id("org.jetbrains.kotlin.plugin.serialization")
}

apply from: appRootPath("base_urls.gradle")

android {
    namespace = "com.example.aheena"
    compileSdk = compileSdkExt

    defaultConfig {
        applicationId = "com.example.aheena"
        minSdk = minSdkExt
        targetSdk = targetSdkExt
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    signingConfigs {
        release {
            File signFile = file(appRootPath("keystore/release_keystore.properties"))
            Properties props = new Properties()
            props.load(new FileInputStream(signFile))
            storeFile file(props['keystore'])
            storePassword props['storePassword']
            keyAlias props['keyAlias']
            keyPassword props['keyPassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

            resValue "string", "app_name", "Aheena debug"

            minifyEnabled = false
            debuggable true
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }

        release {
            resValue "string", "app_name", "Aheena release"

            minifyEnabled = true
            debuggable false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility = javaVersionExt
        targetCompatibility = javaVersionExt
    }

    kotlinOptions {
        jvmTarget = jvmTargetExt
    }

    lintOptions {
        disable "Instantiatable"
    }

    buildFeatures {
        compose = true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = kotlinCompilerExtensionVersionExt
    }

    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

applyBaseUrls(this)

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
                        project.buildDir.absolutePath + "/compose_compiler"
        ]
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                        project.buildDir.absolutePath + "/compose_compiler"
        ]
    }
}

dependencies {
    implementation androidXCore
    implementation androidXLifecycle
    implementation androidXActivity
    implementation androidXComposeUi
    implementation androidXComposeMaterial3
    implementation androidXAppCompat
    implementation androidXNavigation
    debugImplementation androidXComposeUiDebug
    implementation(platform(androidXComposePlatform))
    implementation kotlinX
    implementation dagger
    kapt daggerKapt
    implementation multidex
    implementation lifecycle
    implementation network
    implementation gson

    implementation project(":ui:aheena-lib-ui")
    implementation project(':core_impl')
    implementation project(':domain_models')
    implementation project(':data_sdk_impl')
    implementation project(':data_source_impl')
    implementation project(':mvi')
    implementation project(':feature_splash')
    implementation project(':feature_authentication')
    implementation project(':feature_main')
    implementation project(':feature_itunes')
    implementation project(':feature_tech_api')
    releaseImplementation project(':feature_tech_stub')
    debugImplementation project(':feature_tech')

//    implementation("androidx.core:core-ktx:1.15.0")
//    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.7")
//    implementation("androidx.activity:activity-compose:1.10.0")
//    implementation "androidx.security:security-crypto:1.1.0-alpha06"
//    implementation "androidx.preference:preference-ktx:1.2.1"
//    implementation(platform("androidx.compose:compose-bom:2025.01.01"))
//    implementation("androidx.compose.ui:ui")
//    implementation("androidx.compose.ui:ui-graphics")
//    implementation("androidx.compose.ui:ui-tooling-preview")
//    implementation("androidx.compose.material3:material3")
//    implementation("androidx.appcompat:appcompat:1.7.0")
//    implementation("androidx.navigation:navigation-compose:2.8.6")
//    implementation("androidx.compose.ui:ui-graphics-android:1.7.7")
//    implementation("androidx.compose.ui:ui-android:1.7.7")
//    implementation("androidx.compose.ui:ui-tooling-preview-android:1.7.7")
//    implementation("androidx.compose.runtime:runtime-android:1.7.7")
//    implementation("androidx.compose.foundation:foundation-android:1.7.7")
//    implementation("androidx.compose.material3:material3-android:1.3.1")
//    implementation("com.google.android.material:material:1.12.0")
//    implementation("io.coil-kt:coil-compose:2.7.0")
//    implementation("androidx.compose.material3:material3:1.3.1")
//    implementation("androidx.compose.ui:ui-tooling-preview:1.7.7")
//    debugImplementation("androidx.compose.ui:ui-tooling:1.7.7")
//    implementation("androidx.compose.foundation:foundation:1.7.7")
//
//    implementation("com.google.dagger:dagger:2.47")
//    implementation("com.google.dagger:dagger-android:2.47")
//    implementation("com.google.dagger:dagger-android-support:2.47")
//    kapt("com.google.dagger:dagger-compiler:2.47")
//    kapt("com.google.dagger:dagger-android-processor:2.47")
//
//    implementation("com.android.support:multidex:1.0.3")
//
//    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-extensions:2.2.0")
//    implementation("androidx.lifecycle:lifecycle-common-java8:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-process:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-service:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.8.7")
//    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.8.7")
//
//    implementation("com.squareup.okhttp3:logging-interceptor:4.12.0")
//    implementation("com.squareup.okhttp3:mockwebserver:4.12.0")
//    implementation("com.squareup.retrofit2:retrofit:2.11.0")
//    implementation("com.squareup.retrofit2:converter-moshi:2.11.0")
//    implementation("com.squareup.retrofit2:converter-gson:2.11.0")
//    implementation("com.squareup.retrofit2:converter-scalars:2.11.0")
//    debugImplementation("com.github.chuckerteam.chucker:library:4.0.0")
//    releaseImplementation("com.github.chuckerteam.chucker:library:4.0.0")
//
//    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.7")
//    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")
//    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1")
//    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-guava:1.8.1")
//
//    implementation("com.google.code.gson:gson:2.10.1")
//
//    implementation "androidx.biometric:biometric:1.1.0"
}